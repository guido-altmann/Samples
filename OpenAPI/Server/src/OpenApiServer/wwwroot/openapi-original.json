{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.",
    "title" : "Sample API",
    "version" : "0.1.0"
  },
  "servers" : [ {
    "description" : "Optional server description, e.g. Main (production) server",
    "url" : "http://api.example.com/v1"
  }, {
    "description" : "Internal staging server for testing",
    "url" : "http://localhost:57124/v1"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "description" : "Optional extended description in CommonMark or HTML.",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "A JSON array of user names"
          }
        },
        "summary" : "Returns a list of users."
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "summary" : "Creates a new user."
      }
    },
    "/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "description" : "The specified user ID is invalid (not a number)."
          },
          "404" : {
            "description" : "A user with the specified ID was not found."
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns a user by ID."
      }
    },
    "/products" : {
      "get" : {
        "description" : "Optional extended description in CommonMark or HTML.",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            },
            "description" : "A JSON array of user names"
          }
        },
        "summary" : "Returns a list of products."
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "summary" : "Creates a new product."
      }
    },
    "/products/{productId}" : {
      "get" : {
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Returns a product by ID."
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "example" : {
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "name" ]
      },
      "Product" : {
        "example" : {
          "price" : 6.027456183070403,
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          }
        },
        "required" : [ "id", "name" ]
      }
    }
  }
}
